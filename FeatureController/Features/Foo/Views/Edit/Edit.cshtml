@model FeatureController.Features.Foo.ViewModels.FooEditViewModel
@{
    ViewContext.ClientValidationEnabled = true;
}
@using (Ajax.BeginForm(new AjaxOptions
{
    OnFailure = "ajaxFailure",
    OnSuccess = "ajaxSuccess"
}))
{
    @Html.ValidationSummary(false)

    @Html.HiddenFor(x => x.Id)
    <div class="form-group">
        @Html.LabelFor(x => x.FooEingabe, new { @class = "control-label" })
        @Html.EditorFor(x => x.FooEingabe, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.FooEingabe, "", new { @class = "help-inline" })
        <div class="help-block hide" data-server-validation-for="@Html.NameFor(x=>x.FooEingabe)">

        </div>
    </div>

    <button type="submit" class="btn">Speichern</button>
}

@section Scripts{
    <script type="text/javascript">
        function ajaxFailure(xhr) {
            var $form = $(this);
            $form.find('.form-group.has-error').removeClass('has-error');
            $form.find('.help-block[data-server-validation-for]')
                .removeClass('show')
                .text('');

            $form.find('[data-valmsg-summary="true"]').find('li').remove();

            if (xhr.status === 400) {
                var response = JSON.parse(xhr.responseText);
                var fields = Object.keys(response);

                fields.forEach(function (field) {
                    if (response[field].Errors && response[field].Errors.length > 0) {

                        var errors = extractErrorMessages(response[field].Errors);

                        if (field !== "") {
                            $('[name=' + field + ']')
                                .closest('.form-group')
                                .addClass('has-error');


                            var errorText = errors.join('<br \>');

                            $('[data-server-validation-for="' + field + '"]')
                                .addClass('show')
                                .text(errorText);
                        } else {
                            var errorText = "<li >" + errors.join("</li><li>") + "</li>";
                            $form.find('[data-valmsg-summary="true"]')
                                .removeClass('validation-summary-valid').addClass('validation-summary-errors')
                                .find('ul')
                                    .append(errorText)
                        }
                    }
                });
            }
        }

        function extractErrorMessages(errors) {

            var errorText = $.map(errors, function (element) {
                if (element.ErrorMessage)
                    return element.ErrorMessage;
            });
            return errorText;
        }

        function ajaxSuccess() {
            var $form = $(this);
            $form.find('.form-group.has-error').removeClass('has-error');
            $form.find('.help-block[data-server-validation-for]')
                .removeClass('show')
                .text('')
            //.addClass('')
            ;
            $form.find('[data-valmsg-summary="true"]')
                .addClass('validation-summary-valid').removeClass('validation-summary-errors')
                .find('li').remove();
        }
    </script>
}